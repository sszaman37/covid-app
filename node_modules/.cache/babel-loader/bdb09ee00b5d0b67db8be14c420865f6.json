{"ast":null,"code":"var _jsxFileName = \"/Users/saadat/Documents/Code/covid-app/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length !== 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)']\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/saadat/Documents/Code/covid-app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAClC,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAAzC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAG,YAAW;AACxBD,MAAAA,YAAY,EAAC,MAAMP,cAAc,EAArB,EAAZ;AACH,KAFD;;AAGAQ,IAAAA,QAAQ;AACX,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,KAAqB,CAArB,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CAAC;AACTV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAeR,IAAD,IAAUA,IAAI,CAACW,SAA7B,CADG;AAETC,QAAAA,KAAK,EAAE,UAFE;AAGTC,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAeR,IAAD,IAAUA,IAAI,CAACe,MAA7B,CADL;AAEDH,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDG,QAAAA,eAAe,EAAE,sBAJhB;AAKDF,QAAAA,IAAI,EAAE;AALL,OALO;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAmBI,IApBR;AAuBE,QAAMG,QAAQ,GACZjB,IAAI,CAACW,SAAL,gBAEI,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACTE,QAAAA,KAAK,EAAE,QADE;AAETI,QAAAA,eAAe,EAAE,CAAC,mBAAD,EAAqB,mBAArB,EAAyC,mBAAzC;AAFR,OAAD;AAFN,KADR;AASE,IAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAE;AAAV,OADA;AAEPC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBpB,OAAQ;AAAlD;AAFC,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAgBM,IAjBR;AAoBH,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SADL,CADJ;AAKF,CA1DD;;AA2DA,eAAeN,KAAf","sourcesContent":["import React,{ useState, useEffect }from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line }from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country}) => {\n  const[dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () =>{\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length !== 0 ? (\n          <Line\n            data={{\n              labels: dailyData.map(({ date }) => date),\n              datasets: [{\n                data: dailyData.map((data) => data.confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true, \n              }, {\n                data: dailyData.map((data) => data.deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n              },\n              ],\n            }}\n          />\n        ) : null\n      );\n\n      const barChart = (\n        data.confirmed\n          ? (\n            <Bar \n              data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                  label: 'People',\n                  backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)']\n                }]\n\n              }}\n              options={{\n                legend:{display: false},\n                title:{display: true, text: `Current State in ${country}`},\n              }}\n            />\n          ) : null\n      );\n\n   return(\n       <div className={styles.container}>\n           {lineChart}\n       </div>\n   )\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}